// Boucle sur chaque point d'arrêt
@each $breakpoint in map-keys($grid-breakpoints) {
  // Générer une requête média si nécessaire
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    // Boucle sur chaque propriété d'utilité
    @each $key, $utility in $utilities {
      // L'utilitaire peut être désactivé avec `false`, donc vérifiez d'abord si l'utilitaire est une carte.
      // Ne procédez que si les requêtes média réactives sont activées ou s'il s'agit de la requête média de base.
      @if type-of($utility) ==
        "map" and
        (map-get($utility, responsive) or $infix == "")
      {
        @include generate-utility($utility, $infix);
      }
    }
  }
}

// RFS rescaling
@media (min-width: $rfs-mq-value) {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @if (map-get($grid-breakpoints, $breakpoint) < $rfs-breakpoint) {
      // Loop over each utility property
      @each $key, $utility in $utilities {
        // The utility can be disabled with `false`, thus check if the utility is a map first
        // Only proceed if responsive media queries are enabled or if it's the base media query
        @if type-of($utility) ==
          "map" and
          map-get($utility, rfs) and
          (map-get($utility, responsive) or $infix == "")
        {
          @include generate-utility($utility, $infix, true);
        }
      }
    }
  }
}

// Print utilities
@media print {
  @each $key, $utility in $utilities {
    // The utility can be disabled with `false`, thus check if the utility is a map first
    // Then check if the utility needs print styles
    @if type-of($utility) == "map" and map-get($utility, print) == true {
      @include generate-utility($utility, "-print");
    }
  }
}
